class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int[] merged = merge(nums1, nums2);
        if (merged.length % 2 == 1)
        {
            return(merged[merged.length / 2]);
        }
        else
        {
            return((merged[merged.length / 2 - 1] + merged[merged.length / 2]) / 2.0);
        }
        
    }
    
    public int[] merge(int[] nums1, int[] nums2)
    {
        if (nums1.length == 0) return nums2;
        if (nums2.length == 0) return nums1;
        int[] merged = new int[nums1.length + nums2.length];
        int index1 = 0, index2 = 0;
        for (int i = 0; i < merged.length; i++)
        {
            if (index1 == nums1.length)
            {
                merged[i] = nums2[index2];
                index2++;
            }
            else if (index2 == nums2.length)
            {
                merged[i] = nums1[index1];
                index1++;
            }
            else if (nums1[index1] <= nums2[index2])
            {
                merged[i] = nums1[index1];
                index1++;
            }
            else
            {
                merged[i] = nums2[index2];
                index2++;
            }
        }
        return merged;
    }
    
}
